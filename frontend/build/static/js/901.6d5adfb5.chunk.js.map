{"version":3,"file":"static/js/901.6d5adfb5.chunk.js","mappings":"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","sources":["pages/auth/register/register.js"],"sourcesContent":["import {useRef, useState } from 'react';\r\nimport '../../../assets/styles/register.css';\r\nimport { Link, useNavigate} from 'react-router-dom';\r\nimport {useForm} from 'react-hook-form';\r\nimport AuthService from '../../../services/auth.service';\r\nimport Logo from '../../../components/utils/Logo';\r\n\r\nfunction Register() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const {register, handleSubmit, watch, formState} = useForm();\r\n    const password = useRef({});\r\n    password.current = watch('password', \"\");\r\n\r\n    const [response_error, setResponseError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    const onSubmit = async (data) => {\r\n        setIsLoading(true)        \r\n        await AuthService.register_req(data.username, data.email, data.password).then(\r\n            (response) => {\r\n                console.log(response);\r\n                if (response.data.status === \"SUCCESS\"){\r\n                    setResponseError(\"\");\r\n                    navigate(`/auth/userRegistrationVerfication/${data.email}`);\r\n                }\r\n                else {\r\n                    setResponseError(\"Registration failed: Something went wrong!\")\r\n                }\r\n            },\r\n            (error) => {\r\n                if (error.response) {\r\n                    const resMessage = error.response.data.response\r\n                    setResponseError(resMessage);\r\n                    console.log(error.response.data);\r\n                }else {\r\n                    setResponseError(\"Registration failed: Something went wrong!\")\r\n                }\r\n                \r\n            }\r\n          );\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return(\r\n        <div className='container'>\r\n            <form className=\"auth-form\"  onSubmit={handleSubmit(onSubmit)}>\r\n                <Logo/>\r\n                <h2>Register</h2>\r\n                {\r\n                    (response_error!==\"\") && <p>{response_error}</p>\r\n                }\r\n                <div className='input-box'>\r\n                    <label>Username</label><br/>\r\n                    <input \r\n                        type='text'\r\n                        {...register('username', {\r\n                            required: \"Username is required!\"\r\n                        })}\r\n                    />\r\n                    {formState.errors.username && <small>{formState.errors.username.message}</small>}\r\n                </div>\r\n                \r\n                <div className='input-box'>\r\n                    <label>Email</label><br/>\r\n                    <input \r\n                        type='text'\r\n                        {...register('email', {\r\n                            required: \"Email is required!\",\r\n                            pattern: {value:/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g, message:\"Invalid email address!\"}\r\n                        })}\r\n                    />\r\n                    {formState.errors.email && <small>{formState.errors.email.message}</small>}\r\n                </div>\r\n                \r\n                <div className='input-box'>\r\n                    <label>Password</label><br/>\r\n                    <input \r\n                        type='password'\r\n                        {\r\n                            ...register('password', {\r\n                                required: 'Password is required!',\r\n                                minLength: {\r\n                                    value:8,\r\n                                    message: \"Password must have atleast 8 characters\"\r\n                                }\r\n                            })\r\n                        }\r\n                    />\r\n                    {formState.errors.password && <small>{formState.errors.password.message}</small>}\r\n                </div>\r\n                \r\n                <div className='input-box'>\r\n                    <label>Confirm Password</label><br/>\r\n                    <input \r\n                        type='password'\r\n                        {\r\n                            ...register('cpassword', {\r\n                                required: 'Confirm password is required!',\r\n                                minLength: {\r\n                                    value:8,\r\n                                    message: \"Password must have atleast 8 characters\"\r\n                                },\r\n                                validate: cpass => cpass === password.current || \"Passwords do not match!\"\r\n                            })\r\n                        }\r\n                    />\r\n                    {formState.errors.cpassword && <small>{formState.errors.cpassword.message}</small>}\r\n                </div>\r\n                \r\n                <div className='input-box'>\r\n                    <input type='submit' value={isLoading ? \"Please wait\" : 'Register'}\r\n                     className={isLoading ? \"button button-fill loading\" : \"button button-fill\"}\r\n                    />\r\n                </div>\r\n                <br/><div className='msg'>By clicking Register, you are agree to our user agreement, privacy policy, and cookie policy.</div>\r\n                <br/><div className='msg'>Already a member? <Link to='/auth/login'  className='inline-link'>Login Here</Link></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;"],"names":["navigate","useNavigate","register","handleSubmit","watch","formState","useForm","password","useRef","current","response_error","setResponseError","useState","isLoading","setIsLoading","_jsx","className","children","_jsxs","onSubmit","async","AuthService","register_req","data","username","email","then","response","console","log","status","concat","error","resMessage","Logo","type","required","errors","message","pattern","value","minLength","validate","cpass","cpassword","Link","to"],"sourceRoot":""}