{"version":3,"file":"static/js/134.a5d8f0dc.chunk.js","mappings":"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","sources":["pages/admin/newCategory.js","services/adminService.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Header from \"../../components/utils/header\";\r\nimport AdminService from \"../../services/adminService\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Container from \"../../components/utils/Container\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nfunction NewCategory() {\r\n\r\n    const { register, handleSubmit, formState } = useForm();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const navigate = useNavigate()\r\n\r\n    const onSubmit = async (data) => {\r\n        setIsLoading(true)\r\n        await AdminService.addNewcategory(data.cname, data.type).then(\r\n            (response) => {\r\n                if (response.data.status === 'SUCCESS') {\r\n                    navigate('/admin/categories')\r\n                }\r\n            },\r\n            (error) => {\r\n                error.response ?\r\n                    toast.error(\"Failed to add category: Try again later!\")\r\n                    :\r\n                    toast.error(\"Failed to add category: Try again later!\")\r\n            }\r\n        )\r\n        setIsLoading(false)\r\n    }\r\n\r\n    return (\r\n        <Container activeNavId={7}>\r\n            <Header title=\"New Category\" />\r\n            <Toaster/>\r\n\r\n            <form className=\"auth-form t-form\" onSubmit={handleSubmit(onSubmit)} style={{ marginTop: '25px' }}>\r\n\r\n                <div className='input-box'>\r\n                    <label>Category name</label><br />\r\n                    <input\r\n                        type='text'\r\n                        {...register('cname', {\r\n                            required: \"Category name is required!\",\r\n                            maxLength: {\r\n                                value: 30,\r\n                                message: \"Category name can have atmost 30 characters!\"\r\n                            }\r\n                        })}\r\n                    />\r\n                    {formState.errors.cname && <small>{formState.errors.cname.message}</small>}\r\n                </div>\r\n\r\n                <div className='input-box'>\r\n                    <label>Transaction type</label><br />\r\n                    <div className='radio'>\r\n                        <span>\r\n                            <label>\r\n                                <input\r\n                                    type='radio'\r\n                                    id={1}\r\n                                    value={1}\r\n                                    {...register('type', {\r\n                                        required: \"Transaction type is required!\"\r\n                                    })}\r\n                                />\r\n                                Expense\r\n                            </label>\r\n                        </span>\r\n                        <span>\r\n                            <label>\r\n                                <input\r\n                                    type='radio'\r\n                                    id={2}\r\n                                    value={2}\r\n                                    {...register('type', {\r\n                                        required: \"Transaction type is required!\"\r\n                                    })}\r\n                                />\r\n                                Income\r\n                            </label>\r\n                        </span>\r\n                    </div>\r\n                    {formState.errors.type && <small>{formState.errors.type.message}</small>}\r\n                </div>\r\n\r\n                <div className='input-box'>\r\n                    <input\r\n                        type='submit'\r\n                        value={isLoading ? \"Saving...\" : 'Save category'}\r\n                        className={isLoading ? \"button button-fill loading\" : \"button button-fill\"}\r\n                    />\r\n                </div>\r\n            </form>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NewCategory;","import axios from \"axios\";\r\nimport AuthService from \"./auth.service\";\r\nimport API_BASE_URL from \"./auth.config\";\r\n\r\nconst getAllTransactions = (pagenumber, pageSize, searchKey) => {\r\n    return axios.get(\r\n        API_BASE_URL + \"/transaction/getAll\",\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                pageNumber: pagenumber,\r\n                pageSize: pageSize,\r\n                searchKey: searchKey\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst getAllUsers = (pagenumber, pageSize, searchKey) => {\r\n    return axios.get(\r\n        API_BASE_URL + \"/user/getAll\",\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                pageNumber: pagenumber,\r\n                pageSize: pageSize,\r\n                searchKey: searchKey\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst disableOrEnableUser = (userId) => {\r\n    return axios.delete(\r\n        API_BASE_URL + \"/user/disable\",\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                userId: userId\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst getAllcategories = () => {\r\n    return axios.get(\r\n        API_BASE_URL + '/category/getAll', \r\n        {\r\n            headers: AuthService.authHeader()\r\n        }\r\n    )\r\n}\r\n\r\nconst addNewcategory = (categoryName, transactionTypeId) => {\r\n    return axios.post(\r\n        API_BASE_URL + '/category/new', \r\n        {\r\n            categoryName: categoryName,\r\n            transactionTypeId: transactionTypeId\r\n        },\r\n        {\r\n            headers: AuthService.authHeader()\r\n        }\r\n    )\r\n}\r\n\r\nconst updatecategory = (categoryId, categoryName, transactionTypeId) => {\r\n    return axios.put(\r\n        API_BASE_URL + '/category/update', \r\n        {\r\n            categoryName: categoryName,\r\n            transactionTypeId: transactionTypeId\r\n        },\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                categoryId: categoryId\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst disableOrEnableCategory = (categoryId) => {\r\n    return axios.delete(\r\n        API_BASE_URL + \"/category/delete\",\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                categoryId: categoryId\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst AdminService = {\r\n    getAllTransactions,\r\n    getAllUsers,\r\n    disableOrEnableUser,\r\n    getAllcategories,\r\n    addNewcategory,\r\n    updatecategory,\r\n    disableOrEnableCategory,\r\n}\r\n\r\nexport default AdminService;"],"names":["register","handleSubmit","formState","useForm","isLoading","setIsLoading","useState","navigate","useNavigate","_jsxs","Container","activeNavId","children","_jsx","Header","title","Toaster","className","onSubmit","async","AdminService","addNewcategory","data","cname","type","then","response","status","error","toast","style","marginTop","required","maxLength","value","message","errors","id","getAllTransactions","pagenumber","pageSize","searchKey","axios","get","API_BASE_URL","headers","AuthService","authHeader","params","pageNumber","getAllUsers","disableOrEnableUser","userId","delete","getAllcategories","categoryName","transactionTypeId","post","updatecategory","categoryId","put","disableOrEnableCategory"],"sourceRoot":""}