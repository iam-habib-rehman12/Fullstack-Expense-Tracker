{"version":3,"file":"static/js/370.c705e388.chunk.js","mappings":"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","sources":["components/userProfile/changePassword.js","components/userProfile/userProfileCard.js","pages/user/userProfile.js"],"sourcesContent":["import {useForm} from 'react-hook-form';\r\nimport { useRef, useState } from 'react';\r\nimport UserService from '../../services/userService';\r\nimport toast from 'react-hot-toast';\r\n\r\nfunction ChangePassword({email}) {\r\n\r\n    const {register, handleSubmit, watch, reset, formState} = useForm();\r\n    const password = useRef({});\r\n    password.current = watch('newPassword', \"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const onSubmit = async (data) => {\r\n        setIsLoading(true);     \r\n        await UserService.settingsResetPassword(email, data.currentPassword, data.newPassword).then(\r\n            (response) => {\r\n                if (response.data.status === \"SUCCESS\"){\r\n                    toast.success(response.data.response)\r\n                    reset({currentPassword: \"\", newPassword: \"\", cpassword: \"\"})\r\n                    return\r\n                }\r\n            },\r\n            (error) => {\r\n                error.response ? \r\n                    toast.error(error.response.data.response)\r\n                : \r\n                    toast.error(\"Failed to change password: Try again later!\")\r\n            }\r\n          );\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return(\r\n        <form className=\"auth-form t-form\"  onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <div className='input-box'>\r\n                <label>Current Password</label><br/>\r\n                <input \r\n                    type='password'\r\n                    {\r\n                        ...register('currentPassword', {\r\n                        required: 'Current password is required!',\r\n                            minLength: {\r\n                                value:8,\r\n                                message: \"Password must have atleast 8 characters\"\r\n                            }\r\n                        })\r\n                    }\r\n                />\r\n                {formState.errors.currentPassword && <small>{formState.errors.currentPassword.message}</small>}\r\n            </div>\r\n\r\n            <div className='input-box'>\r\n                <label>Password</label><br/>\r\n                <input \r\n                    type='password'\r\n                    {\r\n                        ...register('newPassword', {\r\n                        required: 'Password is required!',\r\n                            minLength: {\r\n                                value:8,\r\n                                message: \"Password must have atleast 8 characters\"\r\n                            }\r\n                        })\r\n                    }\r\n                />\r\n                {formState.errors.newPassword && <small>{formState.errors.newPassword.message}</small>}\r\n            </div>\r\n                \r\n            <div className='input-box'>\r\n                <label>Confirm Password</label><br/>\r\n                <input \r\n                    type='password'\r\n                    {\r\n                        ...register('cpassword', {\r\n                            required: 'Confirm password is required!',\r\n                            minLength: {\r\n                                value:8,\r\n                                message: \"Password must have atleast 8 characters\"\r\n                            },\r\n                            validate: cpass => cpass === password.current || \"Passwords do not match!\"\r\n                        })\r\n                    }\r\n                />\r\n                {formState.errors.cpassword && <small>{formState.errors.cpassword.message}</small>}\r\n            </div>\r\n\r\n            <div className='t-btn input-box'>\r\n                {/* <input type='submit' value={isLoading ? \"Updating...\" : 'Update password'}\r\n                    className={isLoading ? \"button button-fill loading\" : \"button button-fill\"}/> */}\r\n                {/* <input type='submit' className='button outline' value='Cancel' onClick={() => navigate('/user/transactions')}/> */}\r\n                <input type='submit' value={isLoading ? \"Updating...\" : 'Update password'}\r\n                    className={isLoading ? \"button button-fill loading\" : \"button button-fill\"} />\r\n            </div>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ChangePassword;","import user from '../../assets/images/user.png'\r\nimport useProfileImage from '../../hooks/useProfileImage';\r\nimport Loading from \"../utils/loading\";\r\n\r\nfunction ProfileCard({ username, email}) {\r\n\r\n    const [profileImg, isLoading, uploadProfileImage, removeProfileImage] = useProfileImage();\r\n\r\n    const handleFileChange = async (e) => {\r\n        const selectedFile = e.target.files[0];\r\n        const maxSize = 10 * 1024 * 1024;\r\n        if (selectedFile && selectedFile.size > maxSize) {\r\n            return\r\n        }\r\n        await uploadProfileImage(selectedFile)\r\n    }\r\n\r\n    return (\r\n        <div className='profile' style={{ maxWidth: '400px', flexDirection: 'column', justifyContent: 'center', padding: '25px' }}>\r\n            {\r\n                (isLoading) ?\r\n                    <Loading /> :\r\n                    (\r\n                        <>\r\n                            <div className=\"profile-img\">\r\n                                {!profileImg && <img src={user} width={140} height={140} alt='user'/>}\r\n                                {profileImg && <img src={profileImg} width={140} height={140} alt='user'/>}\r\n                                <div className=\"action\">\r\n                                    {profileImg && <label onClick={removeProfileImage}>Remove image</label>}\r\n                                    <label>\r\n                                        Change image\r\n                                        <input type=\"file\" onChange={handleFileChange} accept=\".jpg, .jpeg, .png\" />\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={{ alignItems: 'center' }}>\r\n                                <h3 style={{color: 'var(--text)'}}>{username}</h3>\r\n                                <p>{email}</p>\r\n                            </div></>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileCard;","import { useState, useEffect } from \"react\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport ProfileCard from \"../../components/userProfile/userProfileCard\";\r\nimport Header from '../../components/utils/header';\r\nimport ChangePassword from \"../../components/userProfile/changePassword\";\r\nimport Container from \"../../components/utils/Container\";\r\nimport { Toaster } from \"react-hot-toast\";\r\n\r\nfunction UserProfile() {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const user = AuthService.getCurrentUser();\r\n\r\n        if (user) {\r\n            setEmail(user.email)\r\n            setUsername(user.username)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Container activeNavId={3}>\r\n            <Header title=\"Settings\" />\r\n            <Toaster/>\r\n            <ProfileCard username={username} email={email} />\r\n            <ChangePassword email={email} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserProfile;"],"names":["_ref","email","register","handleSubmit","watch","reset","formState","useForm","password","useRef","current","isLoading","setIsLoading","useState","_jsxs","className","onSubmit","async","UserService","settingsResetPassword","data","currentPassword","newPassword","then","response","status","toast","success","cpassword","error","children","_jsx","type","required","minLength","value","message","errors","validate","cpass","username","profileImg","uploadProfileImage","removeProfileImage","useProfileImage","style","maxWidth","flexDirection","justifyContent","padding","Loading","_Fragment","src","user","width","height","alt","onClick","onChange","selectedFile","e","target","files","size","accept","alignItems","color","setEmail","setUsername","useEffect","AuthService","getCurrentUser","Container","activeNavId","Header","title","Toaster","ProfileCard","ChangePassword"],"sourceRoot":""}