{"version":3,"file":"static/js/450.442dfeeb.chunk.js","mappings":"4LAmGA,QA7FA,WACI,MAAMA,GAAWC,EAAAA,EAAAA,OAEX,MAAEC,IAAUC,EAAAA,EAAAA,OAEZ,SAACC,EAAQ,aAAEC,EAAY,MAAEC,EAAK,UAAEC,IAAaC,EAAAA,EAAAA,MAC7CC,GAAWC,EAAAA,EAAAA,QAAO,CAAC,GACzBD,EAASE,QAAUL,EAAM,WAAY,IAErC,MAAOM,EAAgBC,IAAoBC,EAAAA,EAAAA,UAAS,KAC7CC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GA8B3C,OACIG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,YAAaG,SAAUhB,GA7B9BiB,UACbN,GAAa,SACPO,EAAAA,EAAYC,cAActB,EAAOuB,EAAKhB,UAAUiB,MACjDC,IACGC,QAAQC,IAAIF,GACiB,YAAzBA,EAASF,KAAKK,QACdjB,EAAiB,IACjBb,EAAS,gBAGTa,EAAiB,+CACrB,IAEHkB,IACG,GAAIA,EAAMJ,SAAU,CAChB,MAAMK,EAAaD,EAAMJ,SAASF,KAAKE,SACvCd,EAAiBmB,GACjBJ,QAAQC,IAAIE,EAAMJ,SACtB,MACId,EAAiB,+CACrB,IAIRG,GAAa,EAAM,IAK+CG,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBAEkB,KAAjBP,IAAwBK,EAAAA,EAAAA,KAAA,KAAAE,SAAIP,KAGjCQ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,cAAgBF,EAAAA,EAAAA,KAAA,UACvBA,EAAAA,EAAAA,KAAA,SACIgB,KAAK,cAEE7B,EAAS,WAAY,CACpB8B,SAAU,wBACVC,UAAW,CACPC,MAAM,EACNC,QAAS,+CAKxB9B,EAAU+B,OAAO7B,WAAYQ,EAAAA,EAAAA,KAAA,SAAAE,SAAQZ,EAAU+B,OAAO7B,SAAS4B,cAGpEjB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,sBAAwBF,EAAAA,EAAAA,KAAA,UAC/BA,EAAAA,EAAAA,KAAA,SACIgB,KAAK,cAEE7B,EAAS,YAAa,CACrB8B,SAAU,gCACVC,UAAW,CACPC,MAAM,EACNC,QAAS,2CAEbE,SAAUC,GAASA,IAAU/B,EAASE,SAAW,8BAI5DJ,EAAU+B,OAAOG,YAAaxB,EAAAA,EAAAA,KAAA,SAAAE,SAAQZ,EAAU+B,OAAOG,UAAUJ,cAGtEpB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,SAASG,MAAOrB,EAAY,cAAgB,kBACvDG,UAAWH,EAAY,6BAA+B,6BAM3E,C","sources":["pages/auth/forgotpassword/changePassword.js"],"sourcesContent":["import {useRef, useState} from 'react';\r\nimport '../../../assets/styles/register.css';\r\nimport { useNavigate, useParams} from 'react-router-dom';\r\nimport {useForm} from 'react-hook-form';\r\nimport AuthService from '../../../services/auth.service';\r\n\r\nfunction ForgotPasswordChangePassword() {\r\n    const navigate = useNavigate();\r\n    \r\n    const { email } = useParams(); \r\n\r\n    const {register, handleSubmit, watch, formState} = useForm();\r\n    const password = useRef({});\r\n    password.current = watch('password', \"\");\r\n\r\n    const [response_error, setResponseError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    const onSubmit = async (data) => {\r\n        setIsLoading(true);     \r\n        await AuthService.resetPassword(email, data.password).then(\r\n            (response) => {\r\n                console.log(response);\r\n                if (response.data.status === \"SUCCESS\"){\r\n                    setResponseError(\"\");\r\n                    navigate(`/auth/login`);\r\n                }\r\n                else {\r\n                    setResponseError(\"Reset password failed: Something went wrong!\")\r\n                }\r\n            },\r\n            (error) => {\r\n                if (error.response) {\r\n                    const resMessage = error.response.data.response\r\n                    setResponseError(resMessage);\r\n                    console.log(error.response);\r\n                }else {\r\n                    setResponseError(\"Reset password failed: Something went wrong!\")\r\n                }\r\n                \r\n            }\r\n          );\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return(\r\n        <div className='container'>\r\n            <form className=\"auth-form\"  onSubmit={handleSubmit(onSubmit)}>\r\n                <h2>Change password</h2>\r\n                {\r\n                    (response_error!==\"\") && <p>{response_error}</p>\r\n                }\r\n                \r\n                <div className='input-box'>\r\n                    <label>Password</label><br/>\r\n                    <input \r\n                        type='password'\r\n                        {\r\n                            ...register('password', {\r\n                                required: 'Password is required!',\r\n                                minLength: {\r\n                                    value:8,\r\n                                    message: \"Password must have atleast 8 characters\"\r\n                                }\r\n                            })\r\n                        }\r\n                    />\r\n                    {formState.errors.password && <small>{formState.errors.password.message}</small>}\r\n                </div>\r\n                \r\n                <div className='input-box'>\r\n                    <label>Confirm Password</label><br/>\r\n                    <input \r\n                        type='password'\r\n                        {\r\n                            ...register('cpassword', {\r\n                                required: 'Confirm password is required!',\r\n                                minLength: {\r\n                                    value:8,\r\n                                    message: \"Password must have atleast 8 characters\"\r\n                                },\r\n                                validate: cpass => cpass === password.current || \"Passwords do not match!\"\r\n                            })\r\n                        }\r\n                    />\r\n                    {formState.errors.cpassword && <small>{formState.errors.cpassword.message}</small>}\r\n                </div>\r\n                \r\n                <div className='input-box'>\r\n                    <input type='submit' value={isLoading ? \"Please wait\" : 'Change password'}\r\n                     className={isLoading ? \"button button-fill loading\" : \"button button-fill\"}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordChangePassword;"],"names":["navigate","useNavigate","email","useParams","register","handleSubmit","watch","formState","useForm","password","useRef","current","response_error","setResponseError","useState","isLoading","setIsLoading","_jsx","className","children","_jsxs","onSubmit","async","AuthService","resetPassword","data","then","response","console","log","status","error","resMessage","type","required","minLength","value","message","errors","validate","cpass","cpassword"],"sourceRoot":""}