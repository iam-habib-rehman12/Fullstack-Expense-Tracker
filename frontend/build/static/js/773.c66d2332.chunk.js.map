{"version":3,"file":"static/js/773.c66d2332.chunk.js","mappings":"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","sources":["components/utils/pageInfo.js","components/utils/search.js","hooks/usePagination.js","pages/admin/users.js","services/adminService.js"],"sourcesContent":["import { memo } from \"react\";\r\n\r\nconst PageInfo = memo(({ info, onPrevClick, onNextClick, pageNumber, noOfPages }) => {\r\n    return (\r\n        <div className=\"page-info\">\r\n            <span>{info}</span>\r\n            <button onClick={onPrevClick} className={pageNumber == 0 ? \"disable\" : \"\"}><i class='fa fa-caret-left' aria-hidden='true'></i></button>\r\n            <button onClick={onNextClick} className={pageNumber + 1 == noOfPages ? \"disable\" : \"\"}><i class='fa fa-caret-right' aria-hidden='true'></i></button>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PageInfo;","import { memo } from \"react\";\r\n\r\nconst Search = memo(({ onChange, placeholder }) => {\r\n    return (\r\n        <input\r\n            type='text'\r\n            placeholder={placeholder}\r\n            onChange={(e) => onChange(e.target.value)}\r\n        />\r\n    )\r\n})\r\n\r\nexport default Search;","import { useState } from \"react\";\r\n\r\nfunction usePagination(initialSortField = null) {\r\n    const pageSize = 10;\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [noOfPages, setNoOfPages] = useState(1);\r\n    const [noOfRecords, setNoOfRecords] = useState(0);\r\n    const [sortField, setSortField] = useState(initialSortField)\r\n    const [sortDirec, setSortDirec] = useState('DESC')\r\n    const [searchKey, setSearchKey] = useState('');\r\n\r\n    const onPrevClick = () => {\r\n        if (pageNumber !== 0) {\r\n            setPageNumber(pageNumber - 1)\r\n        }\r\n    }\r\n\r\n    const onNextClick = () => {\r\n        setPageNumber(pageNumber + 1)\r\n    }\r\n\r\n    const getPageInfo = () => {\r\n        const start = (pageNumber * pageSize) + 1\r\n        const end = pageNumber + 1 === noOfPages ? noOfRecords : (pageNumber * pageSize) + pageSize\r\n\r\n        return String(start) + \" to \" + String(end) + \" of \" + String(noOfRecords) + \" records\"\r\n    }\r\n\r\n    return {\r\n        pageSize, pageNumber, noOfPages, sortField, sortDirec, searchKey,\r\n        onNextClick, onPrevClick, setNoOfPages, setNoOfRecords, setSortField, setSortDirec, setSearchKey, getPageInfo\r\n    }\r\n}\r\n\r\nexport default usePagination;","import { useEffect, useState } from \"react\";\r\nimport AdminService from \"../../services/adminService\"\r\nimport Header from \"../../components/utils/header\";\r\nimport Loading from \"../../components/utils/loading\";\r\nimport usePagination from \"../../hooks/usePagination\";\r\nimport Search from \"../../components/utils/search\";\r\nimport PageInfo from \"../../components/utils/pageInfo\";\r\nimport Info from \"../../components/utils/Info\";\r\nimport Container from \"../../components/utils/Container\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nfunction AdminUsersManagement() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [isFetching, setIsFetching] = useState(true);\r\n\r\n    const {\r\n        pageSize, pageNumber, noOfPages, searchKey,\r\n        onNextClick, onPrevClick, setNoOfPages, setNoOfRecords, setSearchKey, getPageInfo\r\n    } = usePagination()\r\n\r\n    const getUsers = async () => {\r\n        await AdminService.getAllUsers(pageNumber, pageSize, searchKey).then(\r\n            (response) => {\r\n                if (response.data.status === 'SUCCESS') {\r\n                    setData(response.data.response.data)\r\n                    setNoOfPages(response.data.response.totalNoOfPages)\r\n                    setNoOfRecords(response.data.response.totalNoOfRecords)\r\n                    return\r\n                }\r\n                toast.error(\"Failed to fetch all users: Try again later!\")\r\n            },\r\n            (error) => {\r\n                toast.error(\"Failed to fetch all users: Try again later!\")\r\n            }\r\n        )\r\n        setIsFetching(false)\r\n    }\r\n\r\n    const disableOrEnable = async (userId) => {\r\n        await AdminService.disableOrEnableUser(userId).then(\r\n            (response) => {\r\n                if (response.data.status === 'SUCCESS') {\r\n                    window.location.reload()\r\n                    return\r\n                }\r\n                toast.error(\"Failed to update user: Try again later!\")\r\n            },\r\n            (error) => {\r\n                toast.error(\"Failed to update user: Try again later!\")\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, [searchKey, pageNumber])\r\n\r\n    return (\r\n        <Container activeNavId={5}>\r\n            <Header title=\"Users\" />\r\n            <Toaster/>\r\n\r\n            {(isFetching) && <Loading />}\r\n            {(!isFetching) &&\r\n                <>\r\n                    <div className=\"utils page\">\r\n                        <Search onChange={(val) => setSearchKey(val)} placeholder=\"Search users\" />\r\n                        <PageInfo info={getPageInfo()} onPrevClick={onPrevClick} onNextClick={onNextClick}\r\n                            pageNumber={pageNumber} noOfPages={noOfPages}\r\n                        />\r\n                    </div>\r\n                    {(data.length === 0) && <Info text={\"No transactions found!\"} />}\r\n                    {(data.length !== 0) && (\r\n                        <table>\r\n                            <UsersTableHeader />\r\n                            <UsersTableBody data={data} disableOrEnable={disableOrEnable} />\r\n                        </table>\r\n                    )}\r\n                </>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminUsersManagement;\r\n\r\n\r\nfunction UsersTableHeader() {\r\n    return (\r\n        <tr>\r\n            <th>User Id</th> <th>Username</th> <th>Email</th>\r\n            <th>Tot. Expense(Rs.)</th> <th>Tot. Income(Rs.)</th>\r\n            <th>Tot. No. Transactions</th> <th>Status</th> <th>Action</th>\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction UsersTableBody({ data, disableOrEnable }) {\r\n    return (\r\n        data.map((item) => {\r\n            return (\r\n                <tr key={item.id}>\r\n                    <td>{\"U\" + String(item.id).padStart(5, '0')}</td>\r\n                    <td>{item.username}</td>\r\n                    <td>{item.email}</td>\r\n                    <td>Rs. {item.expense || 0.0}</td>\r\n                    <td>Rs. {item.income || 0.0}</td>\r\n                    <td>{item.noOfTransactions || 0}</td>\r\n                    {\r\n                        item.enabled ? <td style={{ color: '#6aa412' }}>Enabled</td> : <td style={{ color: '#ff0000' }}>Disabled</td>\r\n                    }\r\n\r\n                    <td>\r\n                        {\r\n                            (item.enabled) ?\r\n                                <button\r\n                                    onClick={() => disableOrEnable(item.id)}\r\n                                    style={{ backgroundColor: '#ff0000' }}\r\n                                >Disable\r\n                                </button> :\r\n                                <button\r\n                                    onClick={() => disableOrEnable(item.id)}\r\n                                    style={{ backgroundColor: '#6aa412' }}\r\n                                >Enable\r\n                                </button>\r\n                        }\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    )\r\n}","import axios from \"axios\";\r\nimport AuthService from \"./auth.service\";\r\nimport API_BASE_URL from \"./auth.config\";\r\n\r\nconst getAllTransactions = (pagenumber, pageSize, searchKey) => {\r\n    return axios.get(\r\n        API_BASE_URL + \"/transaction/getAll\",\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                pageNumber: pagenumber,\r\n                pageSize: pageSize,\r\n                searchKey: searchKey\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst getAllUsers = (pagenumber, pageSize, searchKey) => {\r\n    return axios.get(\r\n        API_BASE_URL + \"/user/getAll\",\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                pageNumber: pagenumber,\r\n                pageSize: pageSize,\r\n                searchKey: searchKey\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst disableOrEnableUser = (userId) => {\r\n    return axios.delete(\r\n        API_BASE_URL + \"/user/disable\",\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                userId: userId\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst getAllcategories = () => {\r\n    return axios.get(\r\n        API_BASE_URL + '/category/getAll', \r\n        {\r\n            headers: AuthService.authHeader()\r\n        }\r\n    )\r\n}\r\n\r\nconst addNewcategory = (categoryName, transactionTypeId) => {\r\n    return axios.post(\r\n        API_BASE_URL + '/category/new', \r\n        {\r\n            categoryName: categoryName,\r\n            transactionTypeId: transactionTypeId\r\n        },\r\n        {\r\n            headers: AuthService.authHeader()\r\n        }\r\n    )\r\n}\r\n\r\nconst updatecategory = (categoryId, categoryName, transactionTypeId) => {\r\n    return axios.put(\r\n        API_BASE_URL + '/category/update', \r\n        {\r\n            categoryName: categoryName,\r\n            transactionTypeId: transactionTypeId\r\n        },\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                categoryId: categoryId\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst disableOrEnableCategory = (categoryId) => {\r\n    return axios.delete(\r\n        API_BASE_URL + \"/category/delete\",\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                categoryId: categoryId\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst AdminService = {\r\n    getAllTransactions,\r\n    getAllUsers,\r\n    disableOrEnableUser,\r\n    getAllcategories,\r\n    addNewcategory,\r\n    updatecategory,\r\n    disableOrEnableCategory,\r\n}\r\n\r\nexport default AdminService;"],"names":["memo","_ref","info","onPrevClick","onNextClick","pageNumber","noOfPages","_jsxs","className","children","_jsx","onClick","class","onChange","placeholder","type","e","target","value","initialSortField","arguments","length","undefined","setPageNumber","useState","setNoOfPages","noOfRecords","setNoOfRecords","sortField","setSortField","sortDirec","setSortDirec","searchKey","setSearchKey","pageSize","getPageInfo","end","String","data","setData","isFetching","setIsFetching","usePagination","useEffect","async","AdminService","getAllUsers","then","response","status","totalNoOfPages","totalNoOfRecords","toast","error","getUsers","Container","activeNavId","Header","title","Toaster","Loading","_Fragment","Search","val","PageInfo","Info","text","UsersTableHeader","UsersTableBody","disableOrEnable","disableOrEnableUser","userId","window","location","reload","map","item","id","padStart","username","email","expense","income","noOfTransactions","enabled","style","color","backgroundColor","getAllTransactions","pagenumber","axios","get","API_BASE_URL","headers","AuthService","authHeader","params","delete","getAllcategories","addNewcategory","categoryName","transactionTypeId","post","updatecategory","categoryId","put","disableOrEnableCategory"],"sourceRoot":""}