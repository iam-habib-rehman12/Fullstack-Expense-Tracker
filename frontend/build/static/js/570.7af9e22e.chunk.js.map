{"version":3,"file":"static/js/570.7af9e22e.chunk.js","mappings":"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","sources":["../node_modules/react-hot-toast/src/core/types.ts","../node_modules/react-hot-toast/src/core/utils.ts","../node_modules/react-hot-toast/src/core/store.ts","../node_modules/react-hot-toast/src/core/toast.ts","../node_modules/react-hot-toast/src/core/use-toaster.ts","../node_modules/react-hot-toast/src/headless/index.ts","pages/admin/categories.js","services/adminService.js"],"sourcesContent":["import { CSSProperties } from 'react';\n\nexport type ToastType = 'success' | 'error' | 'loading' | 'blank' | 'custom';\nexport type ToastPosition =\n  | 'top-left'\n  | 'top-center'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-center'\n  | 'bottom-right';\n\nexport type Renderable = JSX.Element | string | null;\n\nexport interface IconTheme {\n  primary: string;\n  secondary: string;\n}\n\nexport type ValueFunction<TValue, TArg> = (arg: TArg) => TValue;\nexport type ValueOrFunction<TValue, TArg> =\n  | TValue\n  | ValueFunction<TValue, TArg>;\n\nconst isFunction = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>\n): valOrFunction is ValueFunction<TValue, TArg> =>\n  typeof valOrFunction === 'function';\n\nexport const resolveValue = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>,\n  arg: TArg\n): TValue => (isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction);\n\nexport interface Toast {\n  type: ToastType;\n  id: string;\n  message: ValueOrFunction<Renderable, Toast>;\n  icon?: Renderable;\n  duration?: number;\n  pauseDuration: number;\n  position?: ToastPosition;\n\n  ariaProps: {\n    role: 'status' | 'alert';\n    'aria-live': 'assertive' | 'off' | 'polite';\n  };\n\n  style?: CSSProperties;\n  className?: string;\n  iconTheme?: IconTheme;\n\n  createdAt: number;\n  visible: boolean;\n  height?: number;\n}\n\nexport type ToastOptions = Partial<\n  Pick<\n    Toast,\n    | 'id'\n    | 'icon'\n    | 'duration'\n    | 'ariaProps'\n    | 'className'\n    | 'style'\n    | 'position'\n    | 'iconTheme'\n  >\n>;\n\nexport type DefaultToastOptions = ToastOptions & {\n  [key in ToastType]?: ToastOptions;\n};\n\nexport interface ToasterProps {\n  position?: ToastPosition;\n  toastOptions?: DefaultToastOptions;\n  reverseOrder?: boolean;\n  gutter?: number;\n  containerStyle?: React.CSSProperties;\n  containerClassName?: string;\n  children?: (toast: Toast) => JSX.Element;\n}\n\nexport interface ToastWrapperProps {\n  id: string;\n  className?: string;\n  style?: React.CSSProperties;\n  onHeightUpdate: (id: string, height: number) => void;\n  children?: React.ReactNode;\n}\n","export const genId = (() => {\n  let count = 0;\n  return () => {\n    return (++count).toString();\n  };\n})();\n\nexport const prefersReducedMotion = (() => {\n  // Cache result\n  let shouldReduceMotion: boolean | undefined = undefined;\n\n  return () => {\n    if (shouldReduceMotion === undefined && typeof window !== 'undefined') {\n      const mediaQuery = matchMedia('(prefers-reduced-motion: reduce)');\n      shouldReduceMotion = !mediaQuery || mediaQuery.matches;\n    }\n    return shouldReduceMotion;\n  };\n})();\n","import { useEffect, useState } from 'react';\nimport { DefaultToastOptions, Toast, ToastType } from './types';\n\nconst TOAST_LIMIT = 20;\n\nexport enum ActionType {\n  ADD_TOAST,\n  UPDATE_TOAST,\n  UPSERT_TOAST,\n  DISMISS_TOAST,\n  REMOVE_TOAST,\n  START_PAUSE,\n  END_PAUSE,\n}\n\ntype Action =\n  | {\n      type: ActionType.ADD_TOAST;\n      toast: Toast;\n    }\n  | {\n      type: ActionType.UPSERT_TOAST;\n      toast: Toast;\n    }\n  | {\n      type: ActionType.UPDATE_TOAST;\n      toast: Partial<Toast>;\n    }\n  | {\n      type: ActionType.DISMISS_TOAST;\n      toastId?: string;\n    }\n  | {\n      type: ActionType.REMOVE_TOAST;\n      toastId?: string;\n    }\n  | {\n      type: ActionType.START_PAUSE;\n      time: number;\n    }\n  | {\n      type: ActionType.END_PAUSE;\n      time: number;\n    };\n\ninterface State {\n  toasts: Toast[];\n  pausedAt: number | undefined;\n}\n\nconst toastTimeouts = new Map<Toast['id'], ReturnType<typeof setTimeout>>();\n\nexport const TOAST_EXPIRE_DISMISS_DELAY = 1000;\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: ActionType.REMOVE_TOAST,\n      toastId: toastId,\n    });\n  }, TOAST_EXPIRE_DISMISS_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nconst clearFromRemoveQueue = (toastId: string) => {\n  const timeout = toastTimeouts.get(toastId);\n  if (timeout) {\n    clearTimeout(timeout);\n  }\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case ActionType.ADD_TOAST:\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case ActionType.UPDATE_TOAST:\n      //  ! Side effects !\n      if (action.toast.id) {\n        clearFromRemoveQueue(action.toast.id);\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      };\n\n    case ActionType.UPSERT_TOAST:\n      const { toast } = action;\n      return state.toasts.find((t) => t.id === toast.id)\n        ? reducer(state, { type: ActionType.UPDATE_TOAST, toast })\n        : reducer(state, { type: ActionType.ADD_TOAST, toast });\n\n    case ActionType.DISMISS_TOAST:\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be execrated into a dismissToast() action, but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                visible: false,\n              }\n            : t\n        ),\n      };\n    case ActionType.REMOVE_TOAST:\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n\n    case ActionType.START_PAUSE:\n      return {\n        ...state,\n        pausedAt: action.time,\n      };\n\n    case ActionType.END_PAUSE:\n      const diff = action.time - (state.pausedAt || 0);\n\n      return {\n        ...state,\n        pausedAt: undefined,\n        toasts: state.toasts.map((t) => ({\n          ...t,\n          pauseDuration: t.pauseDuration + diff,\n        })),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [], pausedAt: undefined };\n\nexport const dispatch = (action: Action) => {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n};\n\nexport const defaultTimeouts: {\n  [key in ToastType]: number;\n} = {\n  blank: 4000,\n  error: 4000,\n  success: 2000,\n  loading: Infinity,\n  custom: 4000,\n};\n\nexport const useStore = (toastOptions: DefaultToastOptions = {}): State => {\n  const [state, setState] = useState<State>(memoryState);\n  useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  const mergedToasts = state.toasts.map((t) => ({\n    ...toastOptions,\n    ...toastOptions[t.type],\n    ...t,\n    duration:\n      t.duration ||\n      toastOptions[t.type]?.duration ||\n      toastOptions?.duration ||\n      defaultTimeouts[t.type],\n    style: {\n      ...toastOptions.style,\n      ...toastOptions[t.type]?.style,\n      ...t.style,\n    },\n  }));\n\n  return {\n    ...state,\n    toasts: mergedToasts,\n  };\n};\n","import {\n  Renderable,\n  Toast,\n  ToastOptions,\n  ToastType,\n  DefaultToastOptions,\n  ValueOrFunction,\n  resolveValue,\n} from './types';\nimport { genId } from './utils';\nimport { dispatch, ActionType } from './store';\n\ntype Message = ValueOrFunction<Renderable, Toast>;\n\ntype ToastHandler = (message: Message, options?: ToastOptions) => string;\n\nconst createToast = (\n  message: Message,\n  type: ToastType = 'blank',\n  opts?: ToastOptions\n): Toast => ({\n  createdAt: Date.now(),\n  visible: true,\n  type,\n  ariaProps: {\n    role: 'status',\n    'aria-live': 'polite',\n  },\n  message,\n  pauseDuration: 0,\n  ...opts,\n  id: opts?.id || genId(),\n});\n\nconst createHandler =\n  (type?: ToastType): ToastHandler =>\n  (message, options) => {\n    const toast = createToast(message, type, options);\n    dispatch({ type: ActionType.UPSERT_TOAST, toast });\n    return toast.id;\n  };\n\nconst toast = (message: Message, opts?: ToastOptions) =>\n  createHandler('blank')(message, opts);\n\ntoast.error = createHandler('error');\ntoast.success = createHandler('success');\ntoast.loading = createHandler('loading');\ntoast.custom = createHandler('custom');\n\ntoast.dismiss = (toastId?: string) => {\n  dispatch({\n    type: ActionType.DISMISS_TOAST,\n    toastId,\n  });\n};\n\ntoast.remove = (toastId?: string) =>\n  dispatch({ type: ActionType.REMOVE_TOAST, toastId });\n\ntoast.promise = <T>(\n  promise: Promise<T>,\n  msgs: {\n    loading: Renderable;\n    success: ValueOrFunction<Renderable, T>;\n    error: ValueOrFunction<Renderable, any>;\n  },\n  opts?: DefaultToastOptions\n) => {\n  const id = toast.loading(msgs.loading, { ...opts, ...opts?.loading });\n\n  promise\n    .then((p) => {\n      toast.success(resolveValue(msgs.success, p), {\n        id,\n        ...opts,\n        ...opts?.success,\n      });\n      return p;\n    })\n    .catch((e) => {\n      toast.error(resolveValue(msgs.error, e), {\n        id,\n        ...opts,\n        ...opts?.error,\n      });\n    });\n\n  return promise;\n};\n\nexport { toast };\n","import { useEffect, useCallback } from 'react';\nimport { dispatch, ActionType, useStore } from './store';\nimport { toast } from './toast';\nimport { DefaultToastOptions, Toast, ToastPosition } from './types';\n\nconst updateHeight = (toastId: string, height: number) => {\n  dispatch({\n    type: ActionType.UPDATE_TOAST,\n    toast: { id: toastId, height },\n  });\n};\nconst startPause = () => {\n  dispatch({\n    type: ActionType.START_PAUSE,\n    time: Date.now(),\n  });\n};\n\nexport const useToaster = (toastOptions?: DefaultToastOptions) => {\n  const { toasts, pausedAt } = useStore(toastOptions);\n\n  useEffect(() => {\n    if (pausedAt) {\n      return;\n    }\n\n    const now = Date.now();\n    const timeouts = toasts.map((t) => {\n      if (t.duration === Infinity) {\n        return;\n      }\n\n      const durationLeft =\n        (t.duration || 0) + t.pauseDuration - (now - t.createdAt);\n\n      if (durationLeft < 0) {\n        if (t.visible) {\n          toast.dismiss(t.id);\n        }\n        return;\n      }\n      return setTimeout(() => toast.dismiss(t.id), durationLeft);\n    });\n\n    return () => {\n      timeouts.forEach((timeout) => timeout && clearTimeout(timeout));\n    };\n  }, [toasts, pausedAt]);\n\n  const endPause = useCallback(() => {\n    if (pausedAt) {\n      dispatch({ type: ActionType.END_PAUSE, time: Date.now() });\n    }\n  }, [pausedAt]);\n\n  const calculateOffset = useCallback(\n    (\n      toast: Toast,\n      opts?: {\n        reverseOrder?: boolean;\n        gutter?: number;\n        defaultPosition?: ToastPosition;\n      }\n    ) => {\n      const { reverseOrder = false, gutter = 8, defaultPosition } = opts || {};\n\n      const relevantToasts = toasts.filter(\n        (t) =>\n          (t.position || defaultPosition) ===\n            (toast.position || defaultPosition) && t.height\n      );\n      const toastIndex = relevantToasts.findIndex((t) => t.id === toast.id);\n      const toastsBefore = relevantToasts.filter(\n        (toast, i) => i < toastIndex && toast.visible\n      ).length;\n\n      const offset = relevantToasts\n        .filter((t) => t.visible)\n        .slice(...(reverseOrder ? [toastsBefore + 1] : [0, toastsBefore]))\n        .reduce((acc, t) => acc + (t.height || 0) + gutter, 0);\n\n      return offset;\n    },\n    [toasts]\n  );\n\n  return {\n    toasts,\n    handlers: {\n      updateHeight,\n      startPause,\n      endPause,\n      calculateOffset,\n    },\n  };\n};\n","import { toast } from '../core/toast';\n\nexport type {\n  DefaultToastOptions,\n  IconTheme,\n  Renderable,\n  Toast,\n  ToasterProps,\n  ToastOptions,\n  ToastPosition,\n  ToastType,\n  ValueFunction,\n  ValueOrFunction,\n} from '../core/types';\n\nexport { resolveValue } from '../core/types';\nexport { useToaster } from '../core/use-toaster';\nexport { useStore as useToasterStore } from '../core/store';\n\nexport { toast };\nexport default toast;\n","import AdminService from \"../../services/adminService\";\r\nimport Header from \"../../components/utils/header\";\r\nimport Loading from \"../../components/utils/loading\";\r\nimport useCategories from \"../../hooks/useCategories\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Info from \"../../components/utils/Info\";\r\nimport Container from \"../../components/utils/Container\";\r\nimport { Toaster } from \"react-hot-toast\";\r\nimport toast from \"react-hot-toast/headless\";\r\n\r\nfunction AdminCategoriesManagement() {\r\n\r\n    const [data, isFetching] = useCategories([])\r\n\r\n    const disableOrEnable = async (categoryId) => {\r\n        await AdminService.disableOrEnableCategory(categoryId).then(\r\n            (response) => {\r\n                if (response.data.status === 'SUCCESS') {\r\n                    window.location.reload()\r\n                }\r\n            },\r\n            (error) => {\r\n                toast.error(\"Failed to update category: Try again later!\")\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Container activeNavId={6}>\r\n            <Header title=\"Categories\" />\r\n            <Toaster/>\r\n            {(isFetching) && <Loading />}\r\n            {(!isFetching) && (data.length === 0) && <Info text={\"No categories found!\"} />}\r\n            {(!isFetching) && (data.length !== 0) && (\r\n                <table>\r\n                    <CategoriesTableHeader />\r\n                    <CategoriesTableBody data={data} disableOrEnable={disableOrEnable} />\r\n                </table>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AdminCategoriesManagement;\r\n\r\nfunction CategoriesTableHeader() {\r\n    return (\r\n        <tr>\r\n            <th>Category Id</th>\r\n            <th>Category Name</th>\r\n            <th>Type</th>\r\n            <th>Enabled</th>\r\n            <th>Action</th>\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction CategoriesTableBody({ data, disableOrEnable }) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onEditClick = (category) => {\r\n        localStorage.setItem(\"categoryToEdit\", JSON.stringify(category))\r\n        navigate(`/admin/editCategory/${category.categoryId}`)\r\n    }\r\n\r\n    return (\r\n        data.map((item) => {\r\n            return (\r\n                <tr key={item.categoryId}>\r\n\r\n                    <td>{\"C\" + String(item.categoryId).padStart(5, '0')}</td>\r\n\r\n                    <td>{item.categoryName}</td>\r\n\r\n                    <td>{item.transactionType.transactionTypeName}</td>\r\n                    {\r\n                        item.enabled ? <td style={{ color: '#6aa412' }}>Enabled</td> : <td style={{ color: '#ff0000' }}>Disabled</td>\r\n                    }\r\n\r\n                    <td style={{ display: 'flex', gap: '5px' }}>\r\n                        <button\r\n                            onClick={() => onEditClick(item)}\r\n                        >\r\n                            Edit\r\n                        </button>\r\n                        {\r\n                            (item.enabled) ?\r\n                                (<button\r\n                                    onClick={() => disableOrEnable(item.categoryId)}\r\n                                    style={{ backgroundColor: '#ff0000' }}\r\n                                >\r\n                                    Disable\r\n                                </button>)\r\n                                :\r\n                                (<button\r\n                                    onClick={() => disableOrEnable(item.categoryId)}\r\n                                    style={{ backgroundColor: '#6aa412' }}\r\n                                >\r\n                                    Enable\r\n                                </button>)\r\n                        }\r\n\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    )\r\n}","import axios from \"axios\";\r\nimport AuthService from \"./auth.service\";\r\nimport API_BASE_URL from \"./auth.config\";\r\n\r\nconst getAllTransactions = (pagenumber, pageSize, searchKey) => {\r\n    return axios.get(\r\n        API_BASE_URL + \"/transaction/getAll\",\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                pageNumber: pagenumber,\r\n                pageSize: pageSize,\r\n                searchKey: searchKey\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst getAllUsers = (pagenumber, pageSize, searchKey) => {\r\n    return axios.get(\r\n        API_BASE_URL + \"/user/getAll\",\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                pageNumber: pagenumber,\r\n                pageSize: pageSize,\r\n                searchKey: searchKey\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst disableOrEnableUser = (userId) => {\r\n    return axios.delete(\r\n        API_BASE_URL + \"/user/disable\",\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                userId: userId\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst getAllcategories = () => {\r\n    return axios.get(\r\n        API_BASE_URL + '/category/getAll', \r\n        {\r\n            headers: AuthService.authHeader()\r\n        }\r\n    )\r\n}\r\n\r\nconst addNewcategory = (categoryName, transactionTypeId) => {\r\n    return axios.post(\r\n        API_BASE_URL + '/category/new', \r\n        {\r\n            categoryName: categoryName,\r\n            transactionTypeId: transactionTypeId\r\n        },\r\n        {\r\n            headers: AuthService.authHeader()\r\n        }\r\n    )\r\n}\r\n\r\nconst updatecategory = (categoryId, categoryName, transactionTypeId) => {\r\n    return axios.put(\r\n        API_BASE_URL + '/category/update', \r\n        {\r\n            categoryName: categoryName,\r\n            transactionTypeId: transactionTypeId\r\n        },\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                categoryId: categoryId\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst disableOrEnableCategory = (categoryId) => {\r\n    return axios.delete(\r\n        API_BASE_URL + \"/category/delete\",\r\n        {\r\n            headers: AuthService.authHeader(),\r\n            params: {\r\n                categoryId: categoryId\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst AdminService = {\r\n    getAllTransactions,\r\n    getAllUsers,\r\n    disableOrEnableUser,\r\n    getAllcategories,\r\n    addNewcategory,\r\n    updatecategory,\r\n    disableOrEnableCategory,\r\n}\r\n\r\nexport default AdminService;"],"names":["p","resolveValue","e","t","x","E","toString","m","Map","b","has","setTimeout","delete","T","type","toastId","set","g","reducer","toasts","toast","slice","id","get","clearTimeout","M","map","r","o","find","n","forEach","visible","filter","pausedAt","time","s","pauseDuration","f","S","l","arguments","length","undefined","createdAt","Date","now","ariaProps","role","message","w","a","error","success","loading","custom","dismiss","remove","promise","then","catch","ie","data","isFetching","useCategories","_jsxs","Container","activeNavId","children","_jsx","Header","title","Toaster","Loading","Info","text","CategoriesTableHeader","CategoriesTableBody","disableOrEnable","async","AdminService","disableOrEnableCategory","categoryId","response","status","window","location","reload","_ref","navigate","useNavigate","item","String","padStart","categoryName","transactionType","transactionTypeName","enabled","style","color","display","gap","onClick","onEditClick","category","localStorage","setItem","JSON","stringify","concat","backgroundColor","getAllTransactions","pagenumber","pageSize","searchKey","axios","API_BASE_URL","headers","AuthService","authHeader","params","pageNumber","getAllUsers","disableOrEnableUser","userId","getAllcategories","addNewcategory","transactionTypeId","post","updatecategory","put"],"sourceRoot":""}