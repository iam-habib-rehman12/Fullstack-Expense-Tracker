{"version":3,"file":"static/js/753.4109389f.chunk.js","mappings":"sMAMA,MAwEA,EAxEuCA,KACnC,MAAMC,GAAWC,EAAAA,EAAAA,OAEX,SAACC,EAAQ,aAAEC,EAAY,UAAEC,IAAaC,EAAAA,EAAAA,OAErCC,EAAgBC,IAAoBC,EAAAA,EAAAA,UAAS,KAC7CC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,GA8B7C,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UAClBC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,YAAaG,SAAUZ,GA7B9Ba,UACbN,GAAa,SACPO,EAAAA,EAAYC,0BAA0BC,EAAKC,OAAOC,MACnDC,IACGC,QAAQC,IAAIF,EAASH,KAAKM,SACG,YAAzBH,EAASH,KAAKO,QACdnB,EAAiB,IACjBP,EAAS,sCAAD2B,OAAuCR,EAAKC,SAEpDb,EAAiB,6CACrB,IAEHqB,IACG,GAAIA,EAAMN,SAAU,CAChB,MAAMO,EAAaD,EAAMN,SAASH,KAAKG,SACvCf,EAAiBsB,GACjBN,QAAQC,IAAIK,EAChB,MACIN,QAAQC,IAAII,EAAMH,SAClBlB,EAAiB,6CACrB,IAGRG,GAAa,GACba,QAAQC,IAAIL,EAAK,IAKiDN,SAAA,EAC1DF,EAAAA,EAAAA,KAACmB,EAAAA,EAAI,KACLnB,EAAAA,EAAAA,KAAA,MAAIoB,MAAO,CAACC,UAAU,UAAUnB,SAAC,2CAA0CF,EAAAA,EAAAA,KAAA,UAC3EA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAMmB,MAAO,CAACC,UAAW,SAAUC,WAAY,KAAKpB,SAAC,uDAAuDF,EAAAA,EAAAA,KAAA,SAGrG,KAAjBL,IAAwBK,EAAAA,EAAAA,KAAA,KAAAE,SAAIP,KAGjCQ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,SACAuB,YAAY,gBACRC,KAAK,UACDjC,EAAS,QAAS,CAClBkC,SAAU,qBACVC,QAAS,CAACC,MAAM,mCAAoCb,QAAQ,8BAGnErB,EAAUmC,OAAOnB,QAAST,EAAAA,EAAAA,KAAA,SAAAE,SAAQT,EAAUmC,OAAOnB,MAAMK,cAG9Dd,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,SAAOwB,KAAK,SAASG,MAAO7B,EAAY,YAAc,SACrDG,UAAWH,EAAY,6BAA+B,0BAG3DE,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAAC6B,EAAAA,GAAI,CAACC,GAAI,cAAe7B,UAAU,cAAaC,SAAC,yBAG7E,C","sources":["pages/auth/forgotpassword/forgotPasswordEmailVerification.js"],"sourcesContent":["import React, { useState} from 'react';\r\nimport { Link, useNavigate} from 'react-router-dom';\r\nimport {useForm} from 'react-hook-form';\r\nimport AuthService from '../../../services/auth.service';\r\nimport Logo from '../../../components/utils/Logo';\r\n\r\nconst ForgotPasswordEmailVerfication = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const {register, handleSubmit, formState} = useForm();\r\n\r\n    const [response_error, setResponseError] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    const onSubmit = async (data) => {\r\n        setIsLoading(true)        \r\n        await AuthService.forgotPasswordVerifyEmail(data.email).then(\r\n            (response) => {\r\n                console.log(response.data.message);\r\n                if (response.data.status === 'SUCCESS') {\r\n                    setResponseError(\"\")\r\n                    navigate(`/auth/forgotPassword/verifyAccount/${data.email}`);\r\n                } else {\r\n                    setResponseError('Verification failed: Something went wrong!');\r\n                }\r\n            },\r\n            (error) => {\r\n                if (error.response) {\r\n                    const resMessage = error.response.data.response;\r\n                    setResponseError(resMessage);\r\n                    console.log(resMessage);\r\n                }else {\r\n                    console.log(error.message);\r\n                    setResponseError(\"Verification failed: Something went wrong!\")\r\n                }\r\n            }\r\n          );\r\n        setIsLoading(false);\r\n        console.log(data);\r\n    }\r\n\r\n  return (\r\n    <div className='container'>\r\n            <form className=\"auth-form\"  onSubmit={handleSubmit(onSubmit)}>\r\n                <Logo/>\r\n                <h3 style={{textAlign:'center'}}>Forgot password - verify your account</h3><br/>\r\n                <div className='msg' style={{textAlign: 'center', fontWeight: 600}}>Enter the email address which registered with us.</div><br/>\r\n\r\n                {\r\n                    (response_error!==\"\") && <p>{response_error}</p>\r\n                }\r\n                \r\n                <div className='input-box'>\r\n                    <input \r\n                    placeholder='Email address'\r\n                        type='text'\r\n                        {...register('email', {\r\n                            required: \"Email is required!\",\r\n                            pattern: {value:/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g, message:\"Invalid email address!\"}\r\n                        })}\r\n                    />\r\n                    {formState.errors.email && <small>{formState.errors.email.message}</small>}\r\n                </div>\r\n\r\n                <div className='input-box'>\r\n                    <input type='submit' value={isLoading ? \"Verifying\" : 'Verify'}\r\n                     className={isLoading ? \"button button-fill loading\" : \"button button-fill\"}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className='msg'> <Link to={'/auth/login'} className='inline-link'>Back to Login</Link></div>\r\n\r\n            </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordEmailVerfication;\r\n"],"names":["ForgotPasswordEmailVerfication","navigate","useNavigate","register","handleSubmit","formState","useForm","response_error","setResponseError","useState","isLoading","setIsLoading","_jsx","className","children","_jsxs","onSubmit","async","AuthService","forgotPasswordVerifyEmail","data","email","then","response","console","log","message","status","concat","error","resMessage","Logo","style","textAlign","fontWeight","placeholder","type","required","pattern","value","errors","Link","to"],"sourceRoot":""}